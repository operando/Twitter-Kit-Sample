buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.21.7'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

// load Properties
def fabricProp = loadProperties("fabric.properties")

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"
    defaultConfig {
        applicationId "com.os.operando.tweetsample"
        minSdkVersion 14
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        manifestPlaceholders = [fabricApiKey: fabricProp.getProperty("fabricApiKey")]
        buildConfigField "String", "TWITTER_KEY", "\"${project.twitterKey}\""
        buildConfigField "String", "TWITTER_SECRET", "\"${project.twitterSecret}\""
    }
    dataBinding {
        enabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:24.2.0'
    compile('com.twitter.sdk.android:twitter:2.0.0@aar') {
        transitive = true;
    }
}

/**
 * Reads properties from the specified .properties file.
 */
def loadProperties(filename) {
    def props = new Properties()
    file(filename).withInputStream {
        props.load(it)
    }
    return props
}